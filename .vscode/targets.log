make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Fri Apr 22 13:04:44 2022

# Variables

# environment
REMOTE_CONTAINERS_SOCKETS = ["/tmp/vscode-ssh-auth-156356c31f7e0410bbad90f65155d6d33c05abb6.sock"]
# makefile (from 'Makefile', line 18)
LIBDIR = lib/libft/
# environment
LC_ALL = C
# makefile (from 'Makefile', line 21)
SRC = src/main.c src/tools/prompt.c src/utils/msg.c 
# environment
VSCODE_CWD = /vscode/vscode-server/bin/linux-x64/dfd34e8260c270da74b5c2d86d61aee4b6d56977
# makefile (from 'Makefile', line 17)
MINISHELL_HEADER = include/minishell.h
# default
MAKE_COMMAND := make
# automatic
@D = $(patsubst %/,%,$(dir $@))
# makefile (from 'Makefile', line 28)
OBJ_DIR = obj/
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /workspaces/42minishell
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
HOSTNAME = 42MINISHELL
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# makefile (from 'Makefile', line 19)
LIBFT = lib/libft/libft.a
# makefile (from 'Makefile', line 26)
CC_FLAG = -Wall -Wextra -Werror
# environment
LANG = C
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/local/include /usr/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile (from 'Makefile', line 30)
OBJECTS_PREFIXED = $(addprefix $(OBJ_DIR), $(OBJS))
# makefile
CURDIR := /workspaces/42minishell
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /tmp/vscode-ssh-auth-156356c31f7e0410bbad90f65155d6d33c05abb6.sock
# default
.SHELLFLAGS := -c
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# automatic
@F = $(notdir $@)
# environment
VSCODE_VERBOSE_LOGGING = true
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
*F = $(notdir $*)
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'Makefile', line 29)
OBJS = $(SRC:.c=.o)
# makefile
SHELL = /bin/sh
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /vscode/vscode-server/bin/linux-x64/dfd34e8260c270da74b5c2d86d61aee4b6d56977/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
# default
MAKEFILES := 
# automatic
^F = $(notdir $^)
# environment
VSCODE_LOG_NATIVE = false
# environment
REMOTE_CONTAINERS_IPC = /tmp/vscode-remote-containers-ipc-156356c31f7e0410bbad90f65155d6d33c05abb6.sock
# environment
REMOTE_CONTAINERS = true
# automatic
?F = $(notdir $?)
# makefile (from 'Makefile', line 15)
NAME = minishell
# automatic
+F = $(notdir $+)
# 'override' directive
GNUMAKEFLAGS := 
# environment
BROWSER = /vscode/vscode-server/bin/linux-x64/dfd34e8260c270da74b5c2d86d61aee4b6d56977/bin/helpers/browser.sh
# makefile
.DEFAULT_GOAL := lib/libft/libft.a
# environment
DISPLAY = 192.168.4.222:0.0
# environment
USER = Dokcer
# default
MAKE_VERSION := 4.3
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
VSCODE_AGENT_FOLDER = /root/.vscode-server
# environment
_ = /bin/cat
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-3d775204-64e1-4569-9a42-761962f6abc6.sock
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /root
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# makefile (from 'Makefile', line 25)
CC = gcc -g
# variable set hash-table stats:
# Load=72/1024=7%, Rehash=0, Collisions=4/112=4%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# include (device 49, inode 2814749767538948): 3 files, no impossibilities so far.
# src (device 49, inode 3940649674449791): 3 files, no impossibilities so far.
# src/tools (device 49, inode 3659174697739139): 4 files, no impossibilities so far.
# . (device 49, inode 9570149208337957): 14 files, no impossibilities.
# src/utils (device 49, inode 13510798882193800): 3 files, no impossibilities so far.

# 27 files, no impossibilities in 5 directories.

# Implicit Rules

obj/%.o: %.c include/minishell.h
#  recipe to execute (from 'Makefile', line 33):
	@mkdir -p $(OBJ_DIR)/src
	@mkdir -p $(OBJ_DIR)/src/tools
	@mkdir -p $(OBJ_DIR)/src/utils
	@echo "Compiling $@"
	@$(CC) $(CC_FLAG) -c $< -o $@

# 1 implicit rules, 0 (0.0%) terminal.
# Files

lib/libft/libft.a:
#  Implicit rule search has not been done.
#  Last modified 2022-04-20 12:39:22.4896321
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 40):
	make -C $(LIBDIR)
	

# Not a target:
src/utils/msg.c:
#  Implicit rule search has been done.
#  Last modified 2022-04-22 06:36:06.8994731
#  File has been updated.
#  Successfully updated.

minishell: obj/src/main.o obj/src/tools/prompt.o obj/src/utils/msg.o lib/libft/libft.a
#  Implicit rule search has not been done.
#  Last modified 2022-04-22 12:56:40.5885829
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 43):
	@$(CC) $(OBJECTS_PREFIXED) $(LIBFT) -o $(NAME) -lreadline
	@echo "minishell Done !"

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-04-22 13:04:23.3685273
#  File has been updated.
#  Successfully updated.

clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 53):
	@echo "Cleaning"
	@rm -rf $(OBJ_DIR)
	@rm -rf $(NAME)

obj/src/utils/msg.o: src/utils/msg.c include/minishell.h
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'src/utils/msg'
#  Last modified 2022-04-22 06:45:26.9290923
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 33):
	@mkdir -p $(OBJ_DIR)/src
	@mkdir -p $(OBJ_DIR)/src/tools
	@mkdir -p $(OBJ_DIR)/src/utils
	@echo "Compiling $@"
	@$(CC) $(CC_FLAG) -c $< -o $@

obj/src/main.o: src/main.c include/minishell.h
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'src/main'
#  Last modified 2022-04-22 06:45:26.7865018
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 33):
	@mkdir -p $(OBJ_DIR)/src
	@mkdir -p $(OBJ_DIR)/src/tools
	@mkdir -p $(OBJ_DIR)/src/utils
	@echo "Compiling $@"
	@$(CC) $(CC_FLAG) -c $< -o $@

# Not a target:
src/main.c:
#  Implicit rule search has been done.
#  Last modified 2022-04-22 05:38:35.8830643
#  File has been updated.
#  Successfully updated.

re: fclean all
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all: minishell
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

fclean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 58):
	rm -f $(NAME)

# Not a target:
src/tools/prompt.c:
#  Implicit rule search has been done.
 
#  Last modified 2022-04-22 12:56:32.5095204
#  File has been updated.
#  Successfully updated.

leak:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 47):
	@echo "leak"
	@valgrind --leak-check=full ./$(NAME)

# Not a target:
include/minishell.h:
#  Implicit rule search has been done.
#  Last modified 2022-04-22 06:36:05.189262
#  File has been updated.
#  Successfully updated.

obj/src/tools/prompt.o: src/tools/prompt.c include/minishell.h
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'src/tools/prompt'
#  Last modified 2022-04-22 12:56:40.5015751
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 33):
	@mkdir -p $(OBJ_DIR)/src
	@mkdir -p $(OBJ_DIR)/src/tools
	@mkdir -p $(OBJ_DIR)/src/utils
	@echo "Compiling $@"
	@$(CC) $(CC_FLAG) -c $< -o $@

# files hash-table stats:
# Load=17/1024=2%, Rehash=0, Collisions=0/50=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 43 / storage = 441 B / avg = 10 B
# current buf: size = 8162 B / used = 441 B / count = 43 / avg = 10 B

# strcache performance: lookups = 79 / hit rate = 45%
# hash-table stats:
# Load=43/8192=1%, Rehash=0, Collisions=1/79=1%
# Finished Make data base on Fri Apr 22 13:04:44 2022

 
